version: '3.7'

services:
  traefik:
    container_name: traefik
    image: traefik
    restart: unless-stopped
    networks:
      - ian
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml
      - ./acme.json:/acme.json
    labels:
      - "traefik.enable=true"

      # Traefik Dashboard Secure Config
      - "traefik.http.routers.api.rule=Host(`traefik.ianmyjer.com`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.middlewares.auth.basicauth.users=ian:$$apr1$$pedizur5$$tfpDsNxWXlZ2MBR2X4p5d/"

  example:
    container_name: example
    image: enmyj/example:latest
    networks:
      - ian
    restart: unless-stopped
    ports: 
      - "8081:8000"
    labels:
      - "traefik.enable=true"

      # HTTPS config (http on 80 auto-routed to port 443)
      - "traefik.http.routers.example.rule=Host(`ianmyjer.com`, `www.ianmyjer.com`)"
      - "traefik.http.routers.example.tls=true"
      - "traefik.http.routers.example.tls.certresolver=myresolver"


networks:
  ian:
    name: ian
